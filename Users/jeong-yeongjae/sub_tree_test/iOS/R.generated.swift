//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap { Locale(identifier: $0) } ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)

  /// Find first language and bundle for which the table exists
  fileprivate static func localeBundle(tableName: String, preferredLanguages: [String]) -> (Foundation.Locale, Foundation.Bundle)? {
    // Filter preferredLanguages to localizations, use first locale
    var languages = preferredLanguages
      .map { Locale(identifier: $0) }
      .prefix(1)
      .flatMap { locale -> [String] in
        if hostingBundle.localizations.contains(locale.identifier) {
          if let language = locale.languageCode, hostingBundle.localizations.contains(language) {
            return [locale.identifier, language]
          } else {
            return [locale.identifier]
          }
        } else if let language = locale.languageCode, hostingBundle.localizations.contains(language) {
          return [language]
        } else {
          return []
        }
      }

    // If there's no languages, use development language as backstop
    if languages.isEmpty {
      if let developmentLocalization = hostingBundle.developmentLocalization {
        languages = [developmentLocalization]
      }
    } else {
      // Insert Base as second item (between locale identifier and languageCode)
      languages.insert("Base", at: 1)

      // Add development language as backstop
      if let developmentLocalization = hostingBundle.developmentLocalization {
        languages.append(developmentLocalization)
      }
    }

    // Find first language for which table exists
    // Note: key might not exist in chosen language (in that case, key will be shown)
    for language in languages {
      if let lproj = hostingBundle.url(forResource: language, withExtension: "lproj"),
         let lbundle = Bundle(url: lproj)
      {
        let strings = lbundle.url(forResource: tableName, withExtension: "strings")
        let stringsdict = lbundle.url(forResource: tableName, withExtension: "stringsdict")

        if strings != nil || stringsdict != nil {
          return (Locale(identifier: language), lbundle)
        }
      }
    }

    // If table is available in main bundle, don't look for localized resources
    let strings = hostingBundle.url(forResource: tableName, withExtension: "strings", subdirectory: nil, localization: nil)
    let stringsdict = hostingBundle.url(forResource: tableName, withExtension: "stringsdict", subdirectory: nil, localization: nil)

    if strings != nil || stringsdict != nil {
      return (applicationLocale, hostingBundle)
    }

    // If table is not found for requested languages, key will be shown
    return nil
  }

  /// Load string from Info.plist file
  fileprivate static func infoPlistString(path: [String], key: String) -> String? {
    var dict = hostingBundle.infoDictionary
    for step in path {
      guard let obj = dict?[step] as? [String: Any] else { return nil }
      dict = obj
    }
    return dict?[key] as? String
  }

  static func validate() throws {
    try intern.validate()
  }

  /// This `R.color` struct is generated, and contains static references to 1 colors.
  struct color {
    /// Color `AccentColor`.
    static let accentColor = Rswift.ColorResource(bundle: R.hostingBundle, name: "AccentColor")

    #if os(iOS) || os(tvOS)
    /// `UIColor(named: "AccentColor", bundle: ..., traitCollection: ...)`
    @available(tvOS 11.0, *)
    @available(iOS 11.0, *)
    static func accentColor(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIColor? {
      return UIKit.UIColor(resource: R.color.accentColor, compatibleWith: traitCollection)
    }
    #endif

    #if os(watchOS)
    /// `UIColor(named: "AccentColor", bundle: ..., traitCollection: ...)`
    @available(watchOSApplicationExtension 4.0, *)
    static func accentColor(_: Void = ()) -> UIKit.UIColor? {
      return UIKit.UIColor(named: R.color.accentColor.name)
    }
    #endif

    fileprivate init() {}
  }

  /// This `R.image` struct is generated, and contains static references to 83 images.
  struct image {
    /// Image `account_ic_login_apple_nor`.
    static let account_ic_login_apple_nor = Rswift.ImageResource(bundle: R.hostingBundle, name: "account_ic_login_apple_nor")
    /// Image `account_ic_login_developer`.
    static let account_ic_login_developer = Rswift.ImageResource(bundle: R.hostingBundle, name: "account_ic_login_developer")
    /// Image `account_ic_login_google_nor`.
    static let account_ic_login_google_nor = Rswift.ImageResource(bundle: R.hostingBundle, name: "account_ic_login_google_nor")
    /// Image `account_ic_login_kakao_nor`.
    static let account_ic_login_kakao_nor = Rswift.ImageResource(bundle: R.hostingBundle, name: "account_ic_login_kakao_nor")
    /// Image `account_ic_login_naver_nor`.
    static let account_ic_login_naver_nor = Rswift.ImageResource(bundle: R.hostingBundle, name: "account_ic_login_naver_nor")
    /// Image `actionsheet_handle`.
    static let actionsheet_handle = Rswift.ImageResource(bundle: R.hostingBundle, name: "actionsheet_handle")
    /// Image `back_button`.
    static let back_button = Rswift.ImageResource(bundle: R.hostingBundle, name: "back_button")
    /// Image `background.jpeg`.
    static let backgroundJpeg = Rswift.ImageResource(bundle: R.hostingBundle, name: "background.jpeg")
    /// Image `camera_back`.
    static let camera_back = Rswift.ImageResource(bundle: R.hostingBundle, name: "camera_back")
    /// Image `checkbox_off_01`.
    static let checkbox_off_01 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_01")
    /// Image `checkbox_off_02`.
    static let checkbox_off_02 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_02")
    /// Image `checkbox_off_03`.
    static let checkbox_off_03 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_03")
    /// Image `checkbox_off_04`.
    static let checkbox_off_04 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_04")
    /// Image `checkbox_off_05`.
    static let checkbox_off_05 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_05")
    /// Image `checkbox_off_06`.
    static let checkbox_off_06 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_06")
    /// Image `checkbox_off_07`.
    static let checkbox_off_07 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_07")
    /// Image `checkbox_off_08`.
    static let checkbox_off_08 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_08")
    /// Image `checkbox_off_09`.
    static let checkbox_off_09 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_09")
    /// Image `checkbox_off_10`.
    static let checkbox_off_10 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_10")
    /// Image `checkbox_off_11`.
    static let checkbox_off_11 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_11")
    /// Image `checkbox_off_12`.
    static let checkbox_off_12 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_12")
    /// Image `checkbox_off_13`.
    static let checkbox_off_13 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_13")
    /// Image `checkbox_off_14`.
    static let checkbox_off_14 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_14")
    /// Image `checkbox_off_15`.
    static let checkbox_off_15 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_15")
    /// Image `checkbox_off_16`.
    static let checkbox_off_16 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_off_16")
    /// Image `checkbox_on_01`.
    static let checkbox_on_01 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_01")
    /// Image `checkbox_on_02`.
    static let checkbox_on_02 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_02")
    /// Image `checkbox_on_03`.
    static let checkbox_on_03 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_03")
    /// Image `checkbox_on_04`.
    static let checkbox_on_04 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_04")
    /// Image `checkbox_on_05`.
    static let checkbox_on_05 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_05")
    /// Image `checkbox_on_06`.
    static let checkbox_on_06 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_06")
    /// Image `checkbox_on_07`.
    static let checkbox_on_07 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_07")
    /// Image `checkbox_on_08`.
    static let checkbox_on_08 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_08")
    /// Image `checkbox_on_09`.
    static let checkbox_on_09 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_09")
    /// Image `checkbox_on_10`.
    static let checkbox_on_10 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_10")
    /// Image `checkbox_on_11`.
    static let checkbox_on_11 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_11")
    /// Image `checkbox_on_12`.
    static let checkbox_on_12 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_12")
    /// Image `checkbox_on_13`.
    static let checkbox_on_13 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_13")
    /// Image `checkbox_on_14`.
    static let checkbox_on_14 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_14")
    /// Image `checkbox_on_15`.
    static let checkbox_on_15 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_15")
    /// Image `checkbox_on_16`.
    static let checkbox_on_16 = Rswift.ImageResource(bundle: R.hostingBundle, name: "checkbox_on_16")
    /// Image `exercise`.
    static let exercise = Rswift.ImageResource(bundle: R.hostingBundle, name: "exercise")
    /// Image `help`.
    static let help = Rswift.ImageResource(bundle: R.hostingBundle, name: "help")
    /// Image `home`.
    static let home = Rswift.ImageResource(bundle: R.hostingBundle, name: "home")
    /// Image `ic_logo`.
    static let ic_logo = Rswift.ImageResource(bundle: R.hostingBundle, name: "ic_logo")
    /// Image `loading_bg_iOS`.
    static let loading_bg_iOS = Rswift.ImageResource(bundle: R.hostingBundle, name: "loading_bg_iOS")
    /// Image `menu_btn_nor`.
    static let menu_btn_nor = Rswift.ImageResource(bundle: R.hostingBundle, name: "menu_btn_nor")
    /// Image `notice`.
    static let notice = Rswift.ImageResource(bundle: R.hostingBundle, name: "notice")
    /// Image `radiobutton_off_01`.
    static let radiobutton_off_01 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_01")
    /// Image `radiobutton_off_02`.
    static let radiobutton_off_02 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_02")
    /// Image `radiobutton_off_03`.
    static let radiobutton_off_03 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_03")
    /// Image `radiobutton_off_04`.
    static let radiobutton_off_04 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_04")
    /// Image `radiobutton_off_05`.
    static let radiobutton_off_05 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_05")
    /// Image `radiobutton_off_06`.
    static let radiobutton_off_06 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_06")
    /// Image `radiobutton_off_07`.
    static let radiobutton_off_07 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_07")
    /// Image `radiobutton_off_08`.
    static let radiobutton_off_08 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_08")
    /// Image `radiobutton_off_09`.
    static let radiobutton_off_09 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_09")
    /// Image `radiobutton_off_10`.
    static let radiobutton_off_10 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_10")
    /// Image `radiobutton_off_11`.
    static let radiobutton_off_11 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_11")
    /// Image `radiobutton_off_12`.
    static let radiobutton_off_12 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_12")
    /// Image `radiobutton_off_13`.
    static let radiobutton_off_13 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_13")
    /// Image `radiobutton_off_14`.
    static let radiobutton_off_14 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_14")
    /// Image `radiobutton_off_15`.
    static let radiobutton_off_15 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_15")
    /// Image `radiobutton_off_16`.
    static let radiobutton_off_16 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_off_16")
    /// Image `radiobutton_on_01`.
    static let radiobutton_on_01 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_01")
    /// Image `radiobutton_on_02`.
    static let radiobutton_on_02 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_02")
    /// Image `radiobutton_on_03`.
    static let radiobutton_on_03 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_03")
    /// Image `radiobutton_on_04`.
    static let radiobutton_on_04 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_04")
    /// Image `radiobutton_on_05`.
    static let radiobutton_on_05 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_05")
    /// Image `radiobutton_on_06`.
    static let radiobutton_on_06 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_06")
    /// Image `radiobutton_on_07`.
    static let radiobutton_on_07 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_07")
    /// Image `radiobutton_on_08`.
    static let radiobutton_on_08 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_08")
    /// Image `radiobutton_on_09`.
    static let radiobutton_on_09 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_09")
    /// Image `radiobutton_on_10`.
    static let radiobutton_on_10 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_10")
    /// Image `radiobutton_on_11`.
    static let radiobutton_on_11 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_11")
    /// Image `radiobutton_on_12`.
    static let radiobutton_on_12 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_12")
    /// Image `radiobutton_on_13`.
    static let radiobutton_on_13 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_13")
    /// Image `radiobutton_on_14`.
    static let radiobutton_on_14 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_14")
    /// Image `radiobutton_on_15`.
    static let radiobutton_on_15 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_15")
    /// Image `radiobutton_on_16`.
    static let radiobutton_on_16 = Rswift.ImageResource(bundle: R.hostingBundle, name: "radiobutton_on_16")
    /// Image `sample`.
    static let sample = Rswift.ImageResource(bundle: R.hostingBundle, name: "sample")
    /// Image `settings`.
    static let settings = Rswift.ImageResource(bundle: R.hostingBundle, name: "settings")
    /// Image `user`.
    static let user = Rswift.ImageResource(bundle: R.hostingBundle, name: "user")

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "account_ic_login_apple_nor", bundle: ..., traitCollection: ...)`
    static func account_ic_login_apple_nor(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.account_ic_login_apple_nor, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "account_ic_login_developer", bundle: ..., traitCollection: ...)`
    static func account_ic_login_developer(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.account_ic_login_developer, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "account_ic_login_google_nor", bundle: ..., traitCollection: ...)`
    static func account_ic_login_google_nor(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.account_ic_login_google_nor, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "account_ic_login_kakao_nor", bundle: ..., traitCollection: ...)`
    static func account_ic_login_kakao_nor(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.account_ic_login_kakao_nor, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "account_ic_login_naver_nor", bundle: ..., traitCollection: ...)`
    static func account_ic_login_naver_nor(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.account_ic_login_naver_nor, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "actionsheet_handle", bundle: ..., traitCollection: ...)`
    static func actionsheet_handle(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.actionsheet_handle, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "back_button", bundle: ..., traitCollection: ...)`
    static func back_button(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.back_button, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "background.jpeg", bundle: ..., traitCollection: ...)`
    static func backgroundJpeg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.backgroundJpeg, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "camera_back", bundle: ..., traitCollection: ...)`
    static func camera_back(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.camera_back, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_01", bundle: ..., traitCollection: ...)`
    static func checkbox_off_01(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_01, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_02", bundle: ..., traitCollection: ...)`
    static func checkbox_off_02(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_02, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_03", bundle: ..., traitCollection: ...)`
    static func checkbox_off_03(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_03, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_04", bundle: ..., traitCollection: ...)`
    static func checkbox_off_04(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_04, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_05", bundle: ..., traitCollection: ...)`
    static func checkbox_off_05(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_05, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_06", bundle: ..., traitCollection: ...)`
    static func checkbox_off_06(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_06, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_07", bundle: ..., traitCollection: ...)`
    static func checkbox_off_07(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_07, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_08", bundle: ..., traitCollection: ...)`
    static func checkbox_off_08(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_08, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_09", bundle: ..., traitCollection: ...)`
    static func checkbox_off_09(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_09, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_10", bundle: ..., traitCollection: ...)`
    static func checkbox_off_10(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_10, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_11", bundle: ..., traitCollection: ...)`
    static func checkbox_off_11(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_11, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_12", bundle: ..., traitCollection: ...)`
    static func checkbox_off_12(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_12, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_13", bundle: ..., traitCollection: ...)`
    static func checkbox_off_13(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_13, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_14", bundle: ..., traitCollection: ...)`
    static func checkbox_off_14(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_14, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_15", bundle: ..., traitCollection: ...)`
    static func checkbox_off_15(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_15, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_off_16", bundle: ..., traitCollection: ...)`
    static func checkbox_off_16(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_off_16, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_01", bundle: ..., traitCollection: ...)`
    static func checkbox_on_01(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_01, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_02", bundle: ..., traitCollection: ...)`
    static func checkbox_on_02(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_02, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_03", bundle: ..., traitCollection: ...)`
    static func checkbox_on_03(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_03, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_04", bundle: ..., traitCollection: ...)`
    static func checkbox_on_04(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_04, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_05", bundle: ..., traitCollection: ...)`
    static func checkbox_on_05(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_05, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_06", bundle: ..., traitCollection: ...)`
    static func checkbox_on_06(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_06, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_07", bundle: ..., traitCollection: ...)`
    static func checkbox_on_07(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_07, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_08", bundle: ..., traitCollection: ...)`
    static func checkbox_on_08(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_08, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_09", bundle: ..., traitCollection: ...)`
    static func checkbox_on_09(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_09, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_10", bundle: ..., traitCollection: ...)`
    static func checkbox_on_10(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_10, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_11", bundle: ..., traitCollection: ...)`
    static func checkbox_on_11(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_11, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_12", bundle: ..., traitCollection: ...)`
    static func checkbox_on_12(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_12, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_13", bundle: ..., traitCollection: ...)`
    static func checkbox_on_13(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_13, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_14", bundle: ..., traitCollection: ...)`
    static func checkbox_on_14(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_14, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_15", bundle: ..., traitCollection: ...)`
    static func checkbox_on_15(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_15, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "checkbox_on_16", bundle: ..., traitCollection: ...)`
    static func checkbox_on_16(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.checkbox_on_16, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "exercise", bundle: ..., traitCollection: ...)`
    static func exercise(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.exercise, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "help", bundle: ..., traitCollection: ...)`
    static func help(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.help, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "home", bundle: ..., traitCollection: ...)`
    static func home(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.home, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "ic_logo", bundle: ..., traitCollection: ...)`
    static func ic_logo(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ic_logo, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "loading_bg_iOS", bundle: ..., traitCollection: ...)`
    static func loading_bg_iOS(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.loading_bg_iOS, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "menu_btn_nor", bundle: ..., traitCollection: ...)`
    static func menu_btn_nor(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.menu_btn_nor, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "notice", bundle: ..., traitCollection: ...)`
    static func notice(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.notice, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_01", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_01(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_01, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_02", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_02(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_02, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_03", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_03(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_03, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_04", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_04(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_04, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_05", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_05(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_05, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_06", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_06(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_06, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_07", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_07(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_07, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_08", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_08(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_08, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_09", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_09(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_09, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_10", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_10(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_10, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_11", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_11(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_11, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_12", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_12(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_12, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_13", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_13(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_13, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_14", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_14(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_14, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_15", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_15(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_15, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_off_16", bundle: ..., traitCollection: ...)`
    static func radiobutton_off_16(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_off_16, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_01", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_01(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_01, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_02", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_02(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_02, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_03", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_03(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_03, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_04", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_04(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_04, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_05", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_05(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_05, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_06", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_06(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_06, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_07", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_07(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_07, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_08", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_08(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_08, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_09", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_09(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_09, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_10", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_10(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_10, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_11", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_11(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_11, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_12", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_12(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_12, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_13", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_13(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_13, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_14", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_14(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_14, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_15", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_15(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_15, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "radiobutton_on_16", bundle: ..., traitCollection: ...)`
    static func radiobutton_on_16(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.radiobutton_on_16, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "sample", bundle: ..., traitCollection: ...)`
    static func sample(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sample, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "settings", bundle: ..., traitCollection: ...)`
    static func settings(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.settings, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "user", bundle: ..., traitCollection: ...)`
    static func user(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.user, compatibleWith: traitCollection)
    }
    #endif

    fileprivate init() {}
  }

  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      // There are no resources to validate
    }

    fileprivate init() {}
  }

  fileprivate class Class {}

  fileprivate init() {}
}

struct _R {
  fileprivate init() {}
}
